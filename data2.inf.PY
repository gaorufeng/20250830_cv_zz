import json
import os

# 读取当前文件夹下的data2.inf文件
def read_inf_file(filename):
    """读取inf文件并解析为字典"""
    if not os.path.exists(filename):
        print(f"错误: 文件 {filename} 不存在")
        return {}
    
    try:
        with open(filename, 'r', encoding='utf-8') as f:
            content = f.read()
            # 去除可能的多余字符
            content = content.strip()
            # 如果文件内容包含大括号，直接解析JSON
            if content.startswith('{') and content.endswith('}'):
                return json.loads(content)
            else:
                print("文件格式不正确，应该包含JSON格式的数据")
                return {}
    except Exception as e:
        print(f"读取文件时出错: {e}")
        return {}

# 读取原始inf文件
original_data = read_inf_file('data2.inf')

if not original_data:
    print("无法读取data2.inf文件，请检查文件是否存在且格式正确")
    exit()

# 定义四个列表
kcb50 = ['688008.SH','688009.SH','688012.SH','688036.SH','688041.SH','688047.SH','688065.SH','688072.SH','688082.SH','688099.SH','688111.SH','688114.SH','688120.SH','688122.SH','688126.SH','688169.SH','688180.SH','688187.SH','688188.SH','688213.SH','688223.SH','688234.SH','688249.SH','688256.SH','688271.SH','688278.SH','688297.SH','688303.SH','688349.SH','688363.SH','688375.SH','688396.SH','688469.SH','688472.SH','688475.SH','688506.SH','688521.SH','688525.SH','688538.SH','688561.SH','688563.SH','688578.SH','688599.SH','688608.SH','688617.SH','688728.SH','688777.SH','688819.SH','688981.SH','689009.SH']

kcb100 = ['688008.SH','688009.SH','688012.SH','688036.SH','688041.SH','688047.SH','688065.SH','688072.SH','688082.SH','688099.SH','688111.SH','688114.SH','688120.SH','688122.SH','688126.SH','688169.SH','688180.SH','688187.SH','688188.SH','688213.SH','688223.SH','688234.SH','688249.SH','688256.SH','688271.SH','688278.SH','688297.SH','688303.SH','688349.SH','688363.SH','688375.SH','688396.SH','688469.SH','688472.SH','688475.SH','688506.SH','688521.SH','688525.SH','688538.SH','688561.SH','688563.SH','688578.SH','688599.SH','688608.SH','688617.SH','688728.SH','688777.SH','688819.SH','688981.SH','689009.SH']

cyb100 = ['300474.SZ','300001.SZ','300002.SZ','300003.SZ','300012.SZ','300014.SZ','300015.SZ','300017.SZ','300024.SZ','300033.SZ','300037.SZ','300054.SZ','300058.SZ','300059.SZ','300073.SZ','300070.SZ','300115.SZ','300122.SZ','300124.SZ','300136.SZ','300142.SZ','300144.SZ','300146.SZ','300207.SZ','300212.SZ','300223.SZ','300251.SZ','300253.SZ','300274.SZ','300285.SZ','300308.SZ','300316.SZ','300339.SZ','300346.SZ','300347.SZ','300373.SZ','300383.SZ','300390.SZ','300394.SZ','300395.SZ','300408.SZ','300413.SZ','300418.SZ','300433.SZ','300442.SZ','300450.SZ','300454.SZ','300458.SZ','300476.SZ','300487.SZ','300496.SZ','300498.SZ','300502.SZ','300529.SZ','300558.SZ','300567.SZ','300595.SZ','300601.SZ','300604.SZ','300627.SZ','300628.SZ','300661.SZ','300666.SZ','300676.SZ','300677.SZ','300679.SZ','300699.SZ','300724.SZ','300735.SZ','300748.SZ','300750.SZ','300751.SZ','300759.SZ','300760.SZ','300761.SZ','300763.SZ','300765.SZ','300776.SZ','300782.SZ','300803.SZ','300832.SZ','300857.SZ','300866.SZ','300888.SZ','300896.SZ','300919.SZ','300957.SZ','300979.SZ','300999.SZ','301029.SZ','301165.SZ','301236.SZ','301267.SZ','301269.SZ','301301.SZ','301308.SZ','301358.SZ','301498.SZ','301536.SZ','302132.SZ']

cyb200 =  [
    '300007.SZ', '300009.SZ', '300026.SZ', '300031.SZ', '300035.SZ',
    '300036.SZ', '300045.SZ', '300048.SZ', '300049.SZ', '300053.SZ',
    '300065.SZ', '300068.SZ', '300072.SZ', '300075.SZ', '300077.SZ',
    '300079.SZ', '300080.SZ', '300083.SZ', '300087.SZ', '300088.SZ',
    '300100.SZ', '300101.SZ', '300109.SZ', '300113.SZ', '300118.SZ',
    '300123.SZ', '300127.SZ', '300130.SZ', '300131.SZ', '300133.SZ',
    '300134.SZ', '300140.SZ', '300143.SZ', '300145.SZ', '300151.SZ',
    '300166.SZ', '300168.SZ', '300170.SZ', '300171.SZ', '300181.SZ',
    '300182.SZ', '300183.SZ', '300184.SZ', '300185.SZ', '300188.SZ',
    '300199.SZ', '300206.SZ', '300217.SZ', '300224.SZ', '300226.SZ',
    '300229.SZ', '300232.SZ', '300236.SZ', '300252.SZ', '300255.SZ',
    '300257.SZ', '300260.SZ', '300267.SZ', '300276.SZ', '300284.SZ',
    '300294.SZ', '300296.SZ', '300298.SZ', '300303.SZ', '300315.SZ',
    '300319.SZ', '300327.SZ', '300348.SZ', '300352.SZ', '300355.SZ',
    '300357.SZ', '300363.SZ', '300364.SZ', '300366.SZ', '300377.SZ',
    '300378.SZ', '300382.SZ', '300393.SZ', '300398.SZ', '300401.SZ',
    '300406.SZ', '300409.SZ', '300415.SZ', '300416.SZ', '300428.SZ',
    '300432.SZ', '300438.SZ', '300443.SZ', '300446.SZ', '300451.SZ',
    '300455.SZ', '300456.SZ', '300457.SZ', '300459.SZ', '300463.SZ',
    '300470.SZ', '300475.SZ', '300482.SZ', '300492.SZ', '300525.SZ',
    '300527.SZ', '300568.SZ', '300570.SZ', '300573.SZ', '300576.SZ',
    '300580.SZ', '300593.SZ', '300596.SZ', '300598.SZ', '300602.SZ',
    '300607.SZ', '300613.SZ', '300618.SZ', '300620.SZ', '300624.SZ',
    '300633.SZ', '300634.SZ', '300638.SZ', '300641.SZ', '300655.SZ',
    '300657.SZ', '300660.SZ', '300671.SZ', '300672.SZ', '300674.SZ',
    '300678.SZ', '300682.SZ', '300685.SZ', '300687.SZ', '300693.SZ',
    '300702.SZ', '300705.SZ', '300708.SZ', '300718.SZ', '300723.SZ',
    '300725.SZ', '300726.SZ', '300738.SZ', '300747.SZ', '300755.SZ',
    '300762.SZ', '300768.SZ', '300770.SZ', '300772.SZ', '300773.SZ',
    '300777.SZ', '300779.SZ', '300783.SZ', '300791.SZ', '300811.SZ',
    '300815.SZ', '300820.SZ', '300821.SZ', '300827.SZ', '300841.SZ',
    '300846.SZ', '300850.SZ', '300855.SZ', '300856.SZ', '300861.SZ',
    '300869.SZ', '300894.SZ', '300900.SZ', '300910.SZ', '300972.SZ',
    '300973.SZ', '301015.SZ', '301035.SZ', '301039.SZ', '301050.SZ',
    '301069.SZ', '301071.SZ', '301078.SZ', '301080.SZ', '301090.SZ',
    '301091.SZ', '301095.SZ', '301153.SZ', '301155.SZ', '301171.SZ',
    '301200.SZ', '301205.SZ', '301219.SZ', '301238.SZ', '301239.SZ',
    '301262.SZ', '301291.SZ', '301297.SZ', '301316.SZ', '301327.SZ',
    '301363.SZ', '301371.SZ', '301381.SZ', '301487.SZ', '301510.SZ',
    '301511.SZ', '301522.SZ', '301551.SZ', '301589.SZ', '301606.SZ'
]

# 处理函数：去除后缀并创建代码映射
def process_stock_list(stock_list, suffix):
    """处理股票列表，去除后缀并创建映射"""
    processed = {}
    for stock in stock_list:
        code = stock.split('.')[0]  # 去除.SH或.SZ后缀
        processed[code] = suffix
    return processed

# 处理四个列表
# 原来的处理函数调用（后缀在后面）
#kcb50_map = process_stock_list(kcb50, "-科创50")
#kcb100_map = process_stock_list(kcb100, "-科创100")
#cyb100_map = process_stock_list(cyb100, "-创业板100")
#cyb200_map = process_stock_list(cyb200, "-创业板200")

# 修改为（前缀在前面）
kcb50_map = process_stock_list(kcb50, "科x1-")
kcb100_map = process_stock_list(kcb100, "科x2-")
cyb100_map = process_stock_list(cyb100, "创x1-")
cyb200_map = process_stock_list(cyb200, "创x2-")



# 合并所有映射
all_maps = {}
all_maps.update(kcb50_map)
all_maps.update(kcb100_map)
all_maps.update(cyb100_map)
all_maps.update(cyb200_map)

# 创建新的数据字典
new_data = {}
for code, name in original_data.items():
    if code in all_maps:
        # 如果代码在列表中，添加后缀
        #new_name = f"{name}{all_maps[code]}"
        # 修改为（前缀在前面）
        new_name = f"{all_maps[code]}{name}"


        new_data[code] = new_name
    else:
        # 如果不在列表中，保持原样
        new_data[code] = name

# 生成新的inf文件内容
new_inf_content = json.dumps(new_data, ensure_ascii=False, indent=4)

# 保存到文件



with open('data2new.inf', 'w', encoding='utf-8') as f:
    f.write(new_inf_content)

print("新的inf文件已生成: data2new.inf")
print("处理结果:")
print(new_inf_content)

# 显示哪些股票被标记了
print("\n被标记的股票:")
for code, suffix in all_maps.items():
    if code in original_data:
        print(f"{code}: {original_data[code]} -> {original_data[code]}{suffix}")
